# This is a basic workflow to help you get started with Actions

name: "Release : tercenctl workflow install"

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+' # Push events to any matching semantic tag. For example, 1.10.1 or 2.0.0.
        # For more details, see https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
      # and https://docs.npmjs.com/about-semantic-versioning

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: VERSION
      run: |
        echo "TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
    - uses: tercen/actions/start-tercen@main
    - name: docker login
      run: |
        docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password ${{ secrets.DOCKER_HUB_PASSWORD }}
    - name: Install Template Runner
      run: docker pull tercen/workflow_runner:latest
    - name: Test template 
      id: run_test
      run: |
        docker run -t --net=host tercen/workflow_runner:latest \
          --templateRepo=${GITHUB_REPOSITORY} \
          --templateFolder=workflow_tests \
          --user=${{ secrets.TERCEN_TEST_OPERATOR_USERNAME }} \
          --passw=${{ secrets.TERCEN_TEST_OPERATOR_PASSWORD }} \
          --tag=${TAG} \
          --opMem="500000000" \
          --serviceUri=${{ secrets.TERCEN_TEST_OPERATOR_URI }} \
          --gitToken=${{ github.token }} 
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: TestResults
        path: test_results.json
        retention-days: 1
    - name: 'Create Tercen Logs'
      if: always()  
      run: docker logs start-tercen_tercen_1 
      working-directory: ${{ github.action_path }}
    - name: 'Upload Tercen Logs'
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: TercenLogs
        path: ${{ github.action_path }}/tercen_logs.log
        retention-days: 2
    - name: Create required package.json
      run: echo '{}' > package.json
    - name: Build changelog
      id: Changelog
      uses: tercen/generate-changelog-action@master
    - name: Create release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{steps.Changelog.outputs.changelog}}
        draft: false
        prerelease: false
